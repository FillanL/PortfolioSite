{"version":3,"sources":["containers/Nav.js","containers/Projects.js","components/Resume.js","containers/main.js","containers/ProjectsExplore.js","App.js","serviceWorker.js","index.js"],"names":["Nav","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","react_router_dom","to","className","Component","Projects","style","width","height","name","map","p","id","Resume","main","containers_Projects","components_Resume","ProjectsExplore","console","log","App","props","containers_Nav","react_router","exact","path","component","Main","React","withRouter","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9f61ae17.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\n\nimport '../CSSfiles/nav.scss'\n\nexport class Nav extends Component {\n    render() {\n        return (\n            <nav>\n                <ul>\n                    <li>\n                        <Link to='/'>\n                        Home\n                        </Link>\n                    </li>\n                    <span className=\"spacer\"></span>\n                    <li>\n                        <Link to='/projects'>\n                        Projects\n                        </Link>\n                    </li>\n                    <span className=\"spacer\"></span>\n                    <li>\n                        <Link to='/resume'>\n                        Resume\n                        </Link>\n                    </li>\n                    <span className=\"spacer\"></span>\n                    <li>\n                        <Link to=\"/contact\">\n                        Contact\n                        </Link>\n                    </li>\n                </ul>\n                \n            </nav>\n        )\n    }\n}\n\nexport default Nav\n","import React, { Component } from 'react'\nimport {Link} from \"react-router-dom\"\nimport '../CSSfiles/home.scss'\n\n\nclass Projects extends Component {\n    render() {\n        const projects =  [{name:\"datingapp\"},{name:\"which way\"},{name:\"lemede\"},{name:\"blogz\"}]\n        return (\n            <div className=\"latest-projects\">\n                <h2>## Latest Projects </h2>\n                <div style={{width:\"100%\", height:\"300px\"}}>\n                    <div className=\"latest-project-container\">\n                        <div className=\"projects-container\">\n                            {projects.map(p=> \n                                <div className=\"project-box\" key={p.name}>\n                                    {p.name}\n                                </div>)\n                            }\n                        </div>\n                    </div>\n                    <Link id=\"show-all\" to=\"/projects\">Show All</Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Projects\n","import React, { Component } from 'react'\n\nexport class Resume extends Component {\n    render() {\n        return (\n            <div>\n               \n                <h2>## Experience</h2>\n                <ul>\n                    <li>Durante Rentals</li>\n                </ul>\n\n                <h2>## Education</h2>\n                <ul>\n                    <li>Flatiron School</li>\n                    <li>Youngstown State University</li>\n                    <ul>\n                        <li>Accounting</li>\n                    </ul> \n                </ul>\n                <h2>## Skills</h2>\n                <ul>\n                    <li>Stock options</li>\n                </ul>\n\n            </div>\n        )\n    }\n}\n\nexport default Resume\n","import React, { Component } from 'react'\nimport Projects from './Projects'\n// import ProjectsExplore from './ProjectsExplore'\nimport Resume from '../components/Resume'\nimport '../CSSfiles/home.scss'\n\nexport class main extends Component {\n    render() {\n        return (\n            <div className=\"home-content\">\n                <div className=\"greeting\">\n                   <h3>Fillan Lee</h3>\n                   <p>student for life</p>\n                </div>\n                <Projects/>\n                <Resume/>\n                {/* <ProjectsExplore/> */}\n            </div>\n        )\n    }\n}\n\nexport default main\n","import React, { Component } from 'react'\n\nimport '../CSSfiles/projectexplore.scss'\n\n\nexport class ProjectsExplore extends Component {\n    render() {\n        const projects =  [{name:\"datingapp\"},{name:\"which way\"},{name:\"lemede\"},{name:\"blogz\"}]\n\n        console.log();\n        \n        return (\n            <div>\n                {/* ProjectsExplore */}\n                <div className=\"projects-container\">\n                    {projects.map(p=> \n                        <div className=\"project-box\" key={p.name}>\n                            {p.name}\n                        </div>)\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ProjectsExplore\n","import React from 'react';\nimport {withRouter, Route, Switch} from 'react-router-dom'\n\nimport './App.css';\nimport Nav from './containers/Nav'\nimport Main from './containers/main'\nimport Resume from './components/Resume'\nimport ProjectsExplore from './containers/ProjectsExplore';\n\nclass App extends React.Component {\n  render(){\n    console.log(this.props);\n    \n    return (\n      <div className=\"portfolio\">\n        <Nav />\n  \n        <Switch>\n          <Route exact path='/' component={Main}/>\n          <Route exact path='/Resume' component={Resume}/>\n          <Route exact path='/Projects' component={ProjectsExplore}/>\n          {/* <Route path='/' component={Main}/> */}\n        </Switch>\n  \n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n<App />\n    </BrowserRouter>\n,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}